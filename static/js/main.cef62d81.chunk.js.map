{"version":3,"sources":["components/Header/Header.jsx","components/Item/Item.jsx","components/List/List.jsx","components/FormAdd/FormAdd.jsx","App.jsx","index.js"],"names":["Header","Item","date","km","onDeleteNote","id","year","slice","month","day","fullDate","className","onClick","List","props","notes","length","notesSortedByDateFromNew","sort","a","b","Intl","Collator","compare","map","o","FormAdd","onSubmit","useState","setDate","setKm","e","preventDefault","nanoid","parseFloat","type","placeholder","value","onChange","target","App","initialNotes","setNotes","newNote","indexOfDate","findIndex","item","prevNotes","newNotes","filter","note","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cef62d81.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header() {\n  return (\n    <header>\n      <h1>Учёт тренировок</h1>\n    </header>\n  );\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Item({\n  date,\n  km,\n  onDeleteNote,\n  id,\n}) {\n  const year = date.slice(0, 4);\n  const month = date.slice(5, 7);\n  const day = date.slice(8, 10);\n  const fullDate = `${day}.${month}.${year}`;\n\n  return (\n    <div className=\"item\">\n      <div className=\"item-date\">{fullDate}</div>\n      <div className=\"item-km\">{km}</div>\n      <div className=\"item-buttons-block\">\n        <div className=\"item-del material-icons\" onClick={() => onDeleteNote(id)}>delete_outline</div>\n      </div>\n    </div>\n  );\n}\n\nItem.propTypes = {\n  date: PropTypes.string.isRequired,\n  km: PropTypes.number.isRequired,\n  onDeleteNote: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default Item;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Item from '../Item/Item';\n\nfunction List(props) {\n  const { notes } = props;\n\n  if (!notes.length) {\n    return (\n      <div className=\"list-empty-message\">Нет записей. Начинай тренироваться и добавляй!</div>\n    );\n  }\n\n  const notesSortedByDateFromNew = notes.sort((a, b) => {\n    const collator = new Intl.Collator();\n    return collator.compare(b.date, a.date);\n  });\n\n  return (\n    <div>\n      <div className=\"list-headers\">\n        <div className=\"list-headers-date\">Дата</div>\n        <div className=\"list-headers-km\">Км</div>\n      </div>\n      <div className=\"list-list\">\n        {notesSortedByDateFromNew.map((o) => (\n          <Item\n            key={o.id}\n            id={o.id}\n            date={o.date}\n            km={o.km}\n            onDeleteNote={props.onDeleteNote}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nList.propTypes = {\n  notes: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    km: PropTypes.number.isRequired,\n  })).isRequired,\n  onDeleteNote: PropTypes.func.isRequired,\n};\n\nexport default List;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nfunction FormAdd({ onSubmit }) {\n  // Можно ли тут упростить и сделать один обрабочик ввода для нескольких полей?\n  // Если их будет становитсья больше\n  const [date, setDate] = useState('');\n  const handleDateInput = (e) => {\n    setDate(() => e.target.value);\n  };\n\n  const [km, setKm] = useState('');\n  const handleKmInput = (e) => {\n    setKm(() => e.target.value);\n  };\n\n  const resetForm = () => {\n    setDate(() => '');\n    setKm(() => '');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (date) {\n      onSubmit({\n        id: nanoid(),\n        date,\n        km: parseFloat(km) || 0,\n      });\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input className=\"form-date\" type=\"date\" placeholder=\"дд.мм.гггг\" value={date} onChange={handleDateInput} />\n        <input className=\"form-km\" type=\"text\" placeholder=\"0 км\" value={km} onChange={handleKmInput} />\n        <button className=\"form-add\" type=\"submit\">Добавить</button>\n      </form>\n    </div>\n  );\n}\n\nFormAdd.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default FormAdd;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport Header from './components/Header/Header';\nimport List from './components/List/List';\nimport FormAdd from './components/FormAdd/FormAdd';\n\nexport default function App() {\n  const initialNotes = [\n    { id: nanoid(), date: '2000-01-01', km: 300 },\n    { id: nanoid(), date: '2001-11-15', km: 400 },\n  ];\n  const [notes, setNotes] = useState(initialNotes);\n\n  const handleAddNote = (newNote) => {\n    const indexOfDate = notes.findIndex((item) => item.date === newNote.date);\n    if (indexOfDate === -1) {\n      setNotes((prevNotes) => [...prevNotes, newNote]);\n    } else {\n      setNotes((prevNotes) => {\n        const newNotes = [...prevNotes];\n        newNotes[indexOfDate].km += newNote.km;\n        return newNotes;\n      });\n    }\n  };\n\n  const handleDeleteNote = (id) => {\n    setNotes((prevNotes) => prevNotes.filter((note) => note.id !== id));\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <FormAdd onSubmit={handleAddNote} />\n      <List notes={notes} onDeleteNote={handleDeleteNote} />\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}